{
	"information_for_contributors": [
		"!"
	],
	"version": "1.0",
	"scopeName": "source.cpp.xtd",
	"fileTypes": [
		"cc",
		"cpp",
		"cp",
		"cxx",
		"c++",
		"cu",
		"cuh",
		"h",
		"hh",
		"hpp",
		"hxx",
		"h++",
		"inl",
		"ino",
		"ipp",
		"tcc",
		"tpp"
	],
	"firstLineMatch": "(?i)-\\*-[^*]*(Mode:\\s*)?C\\+\\+(\\s*;.*?)?\\s*-\\*-",
	"name": "C++ (Extended Syntax Highlighting)",
	"patterns": [
		{
			"match": "(?<!::)\\b[A-Z_]{2,}\\b(?!::)",
			"name": "entity.name.macro.cpp"
		},
		{
			"begin": "(u|u8|U|L)?R\"(glsl)\\(",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.cpp"
				},
				"2": {
					"name": "meta.string.literal.name.cpp"
				}
			},
			"end": "\\s*\\)(glsl)\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.cpp"
				},
				"1": {
					"name": "meta.string.literal.name.cpp"
				}
			},
			"name": "string.quoted.double.raw.cpp",
			"patterns": [
				{
					"include": "source.glsl"
				}
			]
		},
		{
			"begin": "(u|u8|U|L)?R\"(makefile)\\(",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.cpp"
				},
				"2": {
					"name": "meta.string.literal.name.cpp"
				}
			},
			"end": "\\s*\\)(makefile)\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.cpp"
				},
				"1": {
					"name": "meta.string.literal.name.cpp"
				}
			},
			"name": "string.quoted.double.raw.cpp",
			"patterns": [
				{
					"include": "source.makefile"
				}
			]
		},
		{
			"begin": "(u|u8|U|L)?R\"(ninja)\\(",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.cpp"
				},
				"2": {
					"name": "meta.string.literal.name.cpp"
				}
			},
			"end": "\\s*\\)(ninja)\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.cpp"
				},
				"1": {
					"name": "meta.string.literal.name.cpp"
				}
			},
			"name": "string.quoted.double.raw.cpp",
			"patterns": [
				{
					"include": "source.ninja"
				}
			]
		},
		{
			"begin": "(u|u8|U|L)?R\"(html)\\(",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.cpp"
				},
				"2": {
					"name": "meta.string.literal.name.cpp"
				}
			},
			"end": "\\s*\\)(html)\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.cpp"
				},
				"1": {
					"name": "meta.string.literal.name.cpp"
				}
			},
			"name": "string.quoted.double.raw.cpp",
			"patterns": [
				{
					"include": "text.html"
				}
			]
		},
		{
			"begin": "(u|u8|U|L)?R\"(xml)\\(",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.cpp"
				},
				"2": {
					"name": "meta.string.literal.name.cpp"
				}
			},
			"end": "\\s*\\)(xml)\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.cpp"
				},
				"1": {
					"name": "meta.string.literal.name.cpp"
				}
			},
			"name": "string.quoted.double.raw.cpp",
			"patterns": [
				{
					"include": "text.xml"
				}
			]
		},
		{
			"begin": "(u|u8|U|L)?R\"(|json)\\(",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.cpp"
				},
				"2": {
					"name": "meta.string.literal.name.cpp"
				}
			},
			"end": "\\s*\\)(|json)\"(_json)?",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.cpp"
				},
				"1": {
					"name": "meta.string.literal.name.cpp"
				}
			},
			"name": "string.quoted.double.raw.cpp",
			"patterns": [
				{
					"include": "source.json"
				}
			]
		},
		{
			"name": "meta.std-library.cpp",
			"begin": "(?=std::)",
			"end": "(?=[^a-z0-9_:])",
			"patterns": [
				{
					"match": "\\b[a-z0-9_]+\\b",
					"name": "keyword.lib.segment-stl"
				},
				{
					"match": "::",
					"name": "punctuation.separator.namespace.access.cpp"
				}
			]
		},
		{
			"match": "(^|(?<=[ \\n\\t{\\[\\(|=<>;,&!]))\\w+(?=::)\\b",
			"name": "keyword.lib.segment.first"
		},
		{
			"match": "(?!std)((?<=::)|(?<=::~)|(?<=::\\*))(?!operator)\\w+\\b",
			"name": "keyword.lib.segment.last"
		},
		{
			"match": " *////////////////////////////////////////////////////////////",
			"name": "punctuation.definition.comment.cpp"
		},
		{
			"include": "source.cpp"
		},
		{
			"match": "\\b(static_assert)\\b\\s{,1}",
			"name": "support.function.cpp"
		},
		{
			"match": "\\w+(?=\\[)\\b",
			"name": "entity.name.array.c"
		},
		{
			"match": "(?<=[\\.>])\\w+\\b(?=[\\(<])",
			"name": "entity.name.function.c"
		},
		{
			"match": "\\b\\w+\\b(?=<.+>\\s*\\()",
			"name": "entity.name.function.template.cpp"
		},
		{
			"match": "~",
			"name": "punctuation.destructor.cpp"
		},
		{
			"match": ":",
			"name": "punctuation.switch.case.colon.c"
		},
		{
			"match": "(?<!\\.)\\.\\.\\.(?!\\.)",
			"name": "punctuation.parameter-pack.cpp"
		},
		{
			"match": "\\(",
			"name": "punctuation.section.arguments.begin.bracket.round.c"
		},
		{
			"match": "\\)",
			"name": "punctuation.section.arguments.end.bracket.round.c"
		},
		{
			"match": "(?<!~)\\b((_?)[A-Z]{1})\\w+\\b(?![\\(\\.\\-])",
			"name": "entity.name.type.class.c"
		},
		{
			"match": "\\b(private|protected|public|signals)\\s?(slots)?(?!:)",
			"name": "storage.modifier.cpp.qt"
		},
		{
			"match": "\\b(\\w+(?=:))",
			"name": "storage.modifier.label.c"
		},
		{
			"match": "(?<!new )\\b\\w+\\b(?=\\()",
			"name": "entity.name.function.c"
		},
		{
			"match": "(?<=new )\\b\\w+\\b(?=\\()",
			"name": "entity.name.type.class.c"
		},
		{
			"match": "\\b(ulong|ullong|uchar|llong|ldouble)\\b",
			"name": "support.type.sys-types.cpp"
		},
		{
			"match": "\\b(qint8|qint16|qint32|qint64|qintptr|qlonglong|qptrdiff|qreal|qsizetype|quint8|quint16|quint32|quint64|quintptr|qulonglong)\\b",
			"name": "support.type.qt.cpp"
		},
		{
			"match": "(?<=template\\s*<.*,?)\\b([\\w_]+)\\b(?=[\\.\\s<])",
			"name": "keyword.control.concept.cpp"
		},
		{
			"begin": "(?<=(export\\b)|^)\\s*(import)\\b\\s*",
			"beginCaptures": {
				"2": {
					"name": "keyword.control.import.cpp"
				}
			},
			"end": "(?=(?://|/\\*))|(?<!\\\\)(?=[;\\n])",
			"name": "meta.preprocessor.import.cpp",
			"patterns": [
				{
					"begin": "\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.cpp"
						}
					},
					"end": "\"",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.cpp"
						}
					},
					"name": "string.quoted.double.import.cpp"
				},
				{
					"begin": "<",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.cpp"
						}
					},
					"end": ">",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.cpp"
						}
					},
					"name": "string.quoted.other.lt-gt.import.cpp"
				},
				{
					"begin": "(:)?",
					"beginCaptures": {
						"0": {
							"name": "punctuation.switch.case.colon.c"
						}
					},
					"end": "((\\w+)\\b([:.])?)",
					"endCaptures": {
						"2": {
							"name": "string.named.import.cpp"
						},
						"3": {
							"name": "punctuation.switch.case.colon.c"
						}
					},
					"name": "meta-module.named.import.cpp"
				}
			]
		},
		{
			"begin": "(?<=(export\\b)|^)\\s*(module)\\b\\s+((?:[_A-Za-z][_A-Za-z0-9]*\\b([:.])?)*)",
			"beginCaptures": {
				"2": {
					"name": "storage.type.cpp"
				},
				"3": {
					"name": "string.named.export.cpp"
				},
				"4": {
					"name": "punctuation.switch.case.colon.c"
				}
			},
			"end": "(?=[;\\n])",
			"name": "meta.module-declaration.cpp"
		}
	]
}